hydra:
  run:
    dir: ./train/train-reach_target_lang-${now:%Y.%m.%d-%H.%M.%S}

defaults:
  - _self_


environment:
  _target_: rlbench.Environment
  action_mode:
    _target_: rlbench.action_modes.action_mode.MoveArmThenGripper
    arm_action_mode:
      _target_: rlbench.action_modes.arm_action_modes.EndEffectorPoseViaIK
    gripper_action_mode:
      _target_: rlbench.action_modes.gripper_action_modes.Discrete
  dataset_root: data_lang
  obs_config:
    _target_: rlbench.observation_config.ObservationConfig
  headless: True

train_dataset:
  _target_: lib.demo_dataset.DemoDataset
  variations: [0,1,2]
  demos_config:
    amount: 64
    image_paths: True
    dataset_root: data_lang
    task_name: reach_target_lang
    obs_config:
      _target_: rlbench.observation_config.ObservationConfig
    random_selection: False
    from_episode_number: 0
  action_mode:
    _target_: rlbench.action_modes.action_mode.MoveArmThenGripper
    arm_action_mode:
      _target_: rlbench.action_modes.arm_action_modes.EndEffectorPoseViaIK
      absolute_mode: False
    gripper_action_mode:
      _target_: rlbench.action_modes.gripper_action_modes.Discrete

train_dataloader:
  _target_: torch.utils.data.DataLoader
  batch_size: 64
  shuffle: True
  num_workers: 0
  persistent_workers: False

model:
  _target_: lib.model_lang.BC
  freeze: False

optimizer:
  _target_: torch.optim.Adam
  lr: 1e-3

train:
  n_steps: 12000
  log_interval: 50
  eval_interval: 500
  save_interval: 500
  device: cuda:0

test:
  _target_: test_lang.test
  n_episodes: 6
  n_steps_per_episode: 100
  device: cuda:0
  task: rlbench.tasks.reach_target_lang.ReachTargetLang

wandb:
  project: bcz-pytorch
  tags: [reach_target_lang, single_task, train]
